// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SquareService.Infrastructure;

#nullable disable

namespace SquareService.Infrastructure.Migrations
{
    [DbContext(typeof(PointListContext))]
    partial class PointListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SquareService.Domain.Aggregates.PointList.PointList", b =>
                {
                    b.Property<int>("PointListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointListId"));

                    b.HasKey("PointListId");

                    b.ToTable("PointLists");
                });

            modelBuilder.Entity("SquareService.Domain.Aggregates.PointList.PointList", b =>
                {
                    b.OwnsMany("SquareService.Domain.ValueObjects.Point", "Points", b1 =>
                        {
                            b1.Property<int>("PointListId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.HasKey("PointListId", "Id");

                            b1.ToTable("Point");

                            b1.WithOwner()
                                .HasForeignKey("PointListId");
                        });

                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
